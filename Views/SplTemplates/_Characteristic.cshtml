@using MedRecPro.Models;
@using Microsoft.AspNetCore.Html;
@using RazorLight.Razor;
@using MedRecPro.Helpers
@inherits RazorLight.TemplatePage<MedRecPro.Models.CharacteristicDto>;
@model CharacteristicDto

<subjectOf>
    <characteristic classCode="OBS">
        <code @SplTemplateHelpers.SafeAttribute("code", Model.Characteristic, "characteristicCode") 
        @SplTemplateHelpers.Attribute("codeSystem", "2.16.840.1.113883.1.11.19255") />
        @if (Model.Characteristic["ValueType"]?.ToString() == "CE")
        {
            <value @SplTemplateHelpers.SafeAttribute("code", Model.Characteristic, "valueCV_Code") 
            @SplTemplateHelpers.SafeAttribute("codeSystem", Model.Characteristic, "valueCV_CodeSystem") 
            @SplTemplateHelpers.SafeAttribute("displayName", Model.Characteristic, "valueCV_DisplayName") xsi:type="CE">
                @if (Model.Characteristic["ValueST"] != null)
                {
                    <originalText>@Model.Characteristic["ValueST"]</originalText>
                }
            </value>
        }
        else if (Model.Characteristic["ValueType"]?.ToString() == "PQ")
        {
            <value @SplTemplateHelpers.SafeAttribute("unit", Model.Characteristic, "valuePQ_Unit") 
            @SplTemplateHelpers.SafeAttribute("value", Model.Characteristic, "valuePQ_Value") xsi:type="PQ" />
        }
        else if (Model.Characteristic["ValueType"]?.ToString() == "BL")
        {
            <value @SplTemplateHelpers.SafeAttribute("value", Model.Characteristic, "valueBL")?.ToString()?.ToLower() xsi:type="BL" />
        }
        else if (Model.Characteristic["ValueType"]?.ToString() == "INT")
        {
            <value @SplTemplateHelpers.SafeAttribute("value", Model.Characteristic, "valueINT") xsi:type="INT" />
        }
        else if (Model.Characteristic["ValueType"]?.ToString() == "ST")
        {
            <value xsi:type="ST">@Model.Characteristic["valueST"]</value>
        }
    </characteristic>
</subjectOf>