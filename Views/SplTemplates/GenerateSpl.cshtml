@using MedRecPro.Models
@using MedRecPro.Helpers
@using RazorLight.Razor
@inherits RazorLight.TemplatePage<MedRecPro.Models.DocumentDto>
@model DocumentDto

@Raw("<?xml version=\"1.0\" encoding=\"UTF-8\"?>")
@Raw("<?xml-stylesheet href=\"http://www.fda.gov/oc/datacouncil/stylesheets/spl/spl.xsl\" type=\"text/xsl\"?>")
<document xmlns="urn:hl7-org:v3"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="urn:hl7-org:v3 http://www.fda.gov/oc/datacouncil/schemas/spl/spl.xsd">
    <id @SplTemplateHelpers.SafeAttribute("root", Model.Document, "DocumentGUID") />
    <code @SplTemplateHelpers.SafeAttribute("code", Model.Document, "DocumentCode")
          @SplTemplateHelpers.SafeAttribute("codeSystem", Model.Document,"DocumentCodeSystem")
          @SplTemplateHelpers.SafeAttribute("displayName", Model.Document,"DocumentDisplayName") />
    @if (Model.Document["Title"] != null)
    {
        <title mediaType="text/x-hl7-title+xml">@Raw(Model.Document["Title"]?.ToString() ?? "")</title>
    }
    <effectiveTime @SplTemplateHelpers.SafeAttributeDateTime("value", Model.Document,"EffectiveTime") />
    <setId @SplTemplateHelpers.SafeAttribute("root", Model.Document,"SetGUID") />
    <versionNumber @SplTemplateHelpers.SafeAttribute("value", Model.Document,"VersionNumber") />

    @foreach (var author in Model.DocumentAuthors)
    {
        await IncludeAsync("_Author", author);
    }

    <component>
        @foreach (var body in Model.StructuredBodies)
        {

            await IncludeAsync("_StructuredBody", body);
        }
    </component>
</document>