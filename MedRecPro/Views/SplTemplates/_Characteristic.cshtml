@using MedRecPro.Models;
@using Microsoft.AspNetCore.Html;
@using RazorLight.Razor;
@using MedRecPro.Helpers;
@inherits RazorLight.TemplatePage<MedRecPro.Models.CharacteristicRendering>;
@model CharacteristicRendering;

@* data pre-computed by CharacteristicRenderingService *@
@if (Model?.HasRenderableContent == true)
{
    var characteristic = Model.CharacteristicDto;

    @* Use stored ValueType for xsi:type instead of hardcoding CE *@
    var xsiType = characteristic.ValueType?.ToUpperInvariant() ?? "CE";

    @* Conditionally render classCode only for product-level characteristics *@
    if (Model.ShouldRenderClassCode)
    {
        <characteristic classCode="OBS">
            @{
                await IncludeAsync("_CharacteristicDetail", Model);
            }
        </characteristic>
    }
    else
    {
        <characteristic>
            @{
                await IncludeAsync("_CharacteristicDetail", Model);
            }
        </characteristic>
    }
}